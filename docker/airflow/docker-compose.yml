version: '3.8'

services:
  redis:
    image: docker.io/bitnami/redis:6.0
    volumes:
      - ${REDIS_VOLUME}:/bitnami
    restart: always
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
  airflow-scheduler:
    # TODO: to be reverted to use proper registry/distro on T39132
    # image: docker.io/bitnami/airflow-scheduler:2
    image: docker.io/bitnami/airflow-scheduler:2
    environment:
      - AIRFLOW_FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW_SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW_DATABASE_HOST=${AIRFLOW_DATABASE_HOST}
      - AIRFLOW_DATABASE_PORT_NUMBER=${AIRFLOW_DATABASE_PORT_NUMBER}
      - AIRFLOW_DATABASE_NAME=${AIRFLOW_DATABASE_NAME}
      - AIRFLOW_DATABASE_USERNAME=${AIRFLOW_DATABASE_USERNAME}
      - AIRFLOW_DATABASE_PASSWORD=${AIRFLOW_DATABASE_PASSWORD}
      - AIRFLOW_LOAD_EXAMPLES=${AIRFLOW_LOAD_EXAMPLES}
      - AIRFLOW_CONN_HTTP_DEFAULT=${AIRFLOW_CONN_HTTP_DEFAULT}
      - AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG=${AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG}
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
    healthcheck:
      test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
      interval: 1m
      timeout: 20s
      retries: 5
      start_period: 1m
    restart: always
    volumes:
      - ${AIRFLOW_DAGS_VOLUME}:/opt/bitnami/airflow/dags
      - ${AIRFLOW_SCHEDULER_VOLUME}:/bitnami
  airflow-worker:
    # TODO: to be reverted to use proper registry/distro on T39132
    # image: docker.io/bitnami/airflow-worker:2
    image: docker.io/bitnami/airflow-worker:2
    environment:
      - AIRFLOW_FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW_SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW_DATABASE_HOST=${AIRFLOW_DATABASE_HOST}
      - AIRFLOW_DATABASE_PORT_NUMBER=${AIRFLOW_DATABASE_PORT_NUMBER}
      - AIRFLOW_DATABASE_NAME=${AIRFLOW_DATABASE_NAME}
      - AIRFLOW_DATABASE_USERNAME=${AIRFLOW_DATABASE_USERNAME}
      - AIRFLOW_DATABASE_PASSWORD=${AIRFLOW_DATABASE_PASSWORD}
      - AIRFLOW_LOAD_EXAMPLES=${AIRFLOW_LOAD_EXAMPLES}
      - AIRFLOW_CONN_HTTP_DEFAULT=${AIRFLOW_CONN_HTTP_DEFAULT}
      - AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG=${AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG}
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
    healthcheck:
      test: [ "CMD-SHELL", 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"' ]
      interval: 1m
      timeout: 20s
      retries: 5
      start_period: 1m
    restart: always
    volumes:
      - ${AIRFLOW_DAGS_VOLUME}:/opt/bitnami/airflow/dags
      - ${AIRFLOW_WORKER_VOLUME}:/bitnami
  airflow:
    image: docker.io/bitnami/airflow:2
    environment:
      - AIRFLOW_FERNET_KEY=${AIRFLOW_FERNET_KEY}
      - AIRFLOW_SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW_DATABASE_HOST=${AIRFLOW_DATABASE_HOST}
      - AIRFLOW_DATABASE_PORT_NUMBER=${AIRFLOW_DATABASE_PORT_NUMBER}
      - AIRFLOW_DATABASE_NAME=${AIRFLOW_DATABASE_NAME}
      - AIRFLOW_DATABASE_USERNAME=${AIRFLOW_DATABASE_USERNAME}
      - AIRFLOW_DATABASE_PASSWORD=${AIRFLOW_DATABASE_PASSWORD}
      - AIRFLOW_LOAD_EXAMPLES=${AIRFLOW_LOAD_EXAMPLES}
      - AIRFLOW_CONN_HTTP_DEFAULT=${AIRFLOW_CONN_HTTP_DEFAULT}
      - AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG=${AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG}
      - AIRFLOW_USERNAME=${AIRFLOW_USERNAME}
      - AIRFLOW_PASSWORD=${AIRFLOW_PASSWORD}
      - AIRFLOW_EMAIL=${AIRFLOW_EMAIL}
      - AIRFLOW_FIRSTNAME=${AIRFLOW_FIRSTNAME}
      - AIRFLOW_LASTNAME=${AIRFLOW_LASTNAME}
      - AIRFLOW_EXECUTOR=CeleryExecutor
    ports:
      - '8080:8080'
    #    healthcheck:
    #      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
    #      interval: 10s
    #      timeout: 10s
    #      retries: 5
    #      start_period: 5m
    restart: always
    volumes:
      - ${AIRFLOW_DAGS_VOLUME}:/opt/bitnami/airflow/dags
      - ${AIRFLOW_VOLUME}:/bitnami
  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
